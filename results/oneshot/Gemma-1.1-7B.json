{
    "0": {
        "topic": "Algorithms",
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "referenceAnswer": "In the worst case, the time complexity of QuickSort is O(n\u00b2), where n is the number of elements in the array. This occurs when the pivot elements are consistently the smallest or largest element in the array, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "feedback": "**Final Score of the Student's Answer:** 50\n\n**Positive Feedback:** The student correctly identifies that QuickSort involves dividing the list into two halves, and proposes a time complexity of O(n log n) for the average case.\n\n**Deduction Reasons:**\n\n- **Relevance (20 points deducted):** The answer lacks clarity on why the student believes the average case time complexity is O(n log n) and does not address the worst case time complexity specifically.\n- **Accuracy (20 points deducted):** The answer is inaccurate as the worst case time complexity of QuickSort is O(n\u00b2) not O(n log n).\n- **Completeness (20 points deducted):** The answer is incomplete as it does not explain the specific reason for the O(n\u00b2) time complexity in the worst case, such as the scenario where unlucky pivoting choices lead to unbalanced partitions.\n- **Clarity (20 points deducted):** The statement lacks elaboration and lacks context to adequately explain the worst-case time complexity of QuickSort."
    },
    "1": {
        "topic": "Data Structures",
        "question": "Explain how a hash table works.",
        "referenceAnswer": "A hash table stores key-value pairs. It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found. Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "feedback": "**Final Score of the Student's Answer:** 40\n\n**Positive Feedback:**\n- The student correctly states that a hash table uses keys for indexing data.\n\n\n**Deduction Reason:**\n- **Relevance (20 points deducted)**: The answer lacks clarity on how a hash function and buckets are used to locate values. \n- **Accuracy (10 points deducted)**: The response simplifies the process by describing it as just an array, omitting the crucial role of hashing and collision resolution.\n- **Completeness (10 points deducted)**: The answer lacks details on the process of hashing and how collisions are handled, which is important for understanding the functionality of a hash table."
    },
    "2": {
        "topic": "System Design",
        "question": "Describe the basic components of a distributed system.",
        "referenceAnswer": "A distributed system consists of multiple software components located on different networked computers, which communicate and coordinate their actions by passing messages. The components interact with each other in order to achieve a common goal. Key components include servers, clients, and the communication infrastructure.",
        "studentAnswer": "Distributed systems are just multiple computers connected to a server that manages them.",
        "feedback": "**Final Score of the Student's Answer:** 25\n\n**Positive Feedback:** The student correctly states that a distributed system consists of multiple computers connected to a server.\n\n**Deduction Reason:** Relevance (25 points deducted) - The answer lacks essential details about the communication and coordination between the computers, which is core to the concept of a distributed system. The response fails to elaborate on the key components and their interactions in achieving a common goal."
    },
    "3": {
        "topic": "Software Engineering",
        "question": "What is refactoring in software development?",
        "referenceAnswer": "Refactoring is the process of restructuring existing computer code\u2014changing the factoring\u2014without changing its external behavior. It is done to improve nonfunctional attributes of the software, such as readability, reduced complexity, or improving maintainability and scalability.",
        "studentAnswer": "Refactoring is when you write new functions to add more features to the software.",
        "feedback": "**Final Score of the Student's Answer:** 25\n\n**Positive Feedback:** The student correctly identifies that refactoring involves restructuring existing code without altering its functionality.\n\n**Deduction Reason:** Accuracy (25 points deducted) - The answer is inaccurate as it describes refactoring as adding new features, rather than restructuring the code for nonfunctional improvements such as readability or maintainability."
    }
}