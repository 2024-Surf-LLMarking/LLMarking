{
    "0": {
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "fullMark": "5",
        "referenceAnswer": "In the worst case, <Point1:3>the time complexity of QuickSort is O(n^2)<Point1:3>, where n is the number of elements in the array. <Point2:2>This occurs when the pivot elements are consistently the smallest or largest element in the array<Point2:2>, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "teacherMark": "<Point1:0> <Deduction>,<Point2:0> <Deduction>",
        "feedback": "<Point:5> <Induction>The student correctly identifies that QuickSort involves dividing the list into two halves, which is a correct aspect of the algorithm. However, they inaccurately state the worst-case time complexity as O(n log n).</Induction>\n<Point:3> <Deduction>The student incorrectly identifies the time complexity of QuickSort in the worst case as O(n log n), when it is actually O(n^2) in the worst-case scenario. This misunderstanding leads to an incorrect representation of the algorithm's efficiency in extreme cases.</Deduction>\nTotal score: 2/5"
    },
    "1": {
        "question": "Explain how a hash table works.",
        "fullMark": "5",
        "referenceAnswer": "<Point1:2>A hash table stores key-value pairs<Point1:2>. <Point2:2>It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found<Point2:2>. <Point3:1>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution<Point3:1>.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "teacherMark": "<Point1:2> <Induction>,<Point2:0> <Deduction>,<Point3:0> <Deduction>",
        "feedback": "<Point:2> <Induction>The student correctly identifies that a hash table is related to an array and uses keys for indexing, which shows basic understanding of hash tables.</Induction>\n<Point:3> <Deduction>The student's answer lacks the detail of how the hash function is used to compute an index into an array of buckets, which is a crucial aspect of how hash tables work.</Deduction>\nTotal score: 2/5"
    }
}