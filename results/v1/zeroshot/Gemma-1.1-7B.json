{
    "0": {
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "fullMark": "5",
        "referenceAnswer": "In the worst case, <Point1:3>the time complexity of QuickSort is O(n^2)<Point1:3>, where n is the number of elements in the array. <Point2:2>This occurs when the pivot elements are consistently the smallest or largest element in the array<Point2:2>, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "teacherMark": "<Point1:0> <Deduction>,<Point2:0> <Deduction>",
        "feedback": "<Point1:3> Induction: The student has correctly stated that the time complexity of QuickSort in the worst case is O(n^2).\n<Point1:3> Deduction: The student's answer lacks the explanation of the specific scenario where the time complexity becomes O(n^2), which is the case when the pivot elements are consistently the smallest or largest element in the array.\n\n<Point2:2> Induction: The student has not provided any explanation to support this point.\n<Point2:2> Deduction: The student's answer does not elaborate on the concept of unbalanced partitions leading to the worst-case time complexity of O(n^2).\n\n**Total score: 3/5**"
    },
    "1": {
        "question": "Explain how a hash table works.",
        "fullMark": "5",
        "referenceAnswer": "<Point1:2>A hash table stores key-value pairs<Point1:2>. <Point2:2>It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found<Point2:2>. <Point3:1>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution<Point3:1>.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "teacherMark": "<Point1:2> <Induction>,<Point2:0> <Deduction>,<Point3:0> <Deduction>",
        "feedback": "<Point1:2> **Induction**... The student correctly states that a hash table stores key-value pairs.\n<Point2:0> **Deduction**... The student lacks explanation on how the hash table uses a hash function to compute an index or on the presence of collision resolution.\n<Point3:0> **Deduction**... The statement lacks elaboration on the ideal scenario of unique key-bucket assignment.\n\n**Total Score:** 2/5"
    }
}