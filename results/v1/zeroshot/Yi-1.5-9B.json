{
    "0": {
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "fullMark": "5",
        "referenceAnswer": "In the worst case, <Point1:3>the time complexity of QuickSort is O(n^2)<Point1:3>, where n is the number of elements in the array. <Point2:2>This occurs when the pivot elements are consistently the smallest or largest element in the array<Point2:2>, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "teacherMark": "<Point1:0> <Deduction>,<Point2:0> <Deduction>",
        "feedback": "<Point1 :3 > False <Point1 :3 > (The student should mention that the worst-case time complexity of QuickSort is O(n^2), not O(n log n). The student's statement is incorrect because O(n log n) is the average case time complexity, not the worst case.)\n\n<Point2 :2 > True <Point2 :2 > (The student correctly implies that the worst case happens when the pivot elements are consistently the smallest or largest element in the array, leading to unbalanced partitions. However, since the initial statement about the time complexity is incorrect, the point is awarded based on the correct implication despite the incorrect premise.)"
    },
    "1": {
        "question": "Explain how a hash table works.",
        "fullMark": "5",
        "referenceAnswer": "<Point1:2>A hash table stores key-value pairs<Point1:2>. <Point2:2>It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found<Point2:2>. <Point3:1>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution<Point3:1>.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "teacherMark": "<Point1:2> <Induction>,<Point2:0> <Deduction>,<Point3:0> <Deduction>",
        "feedback": "<Point1 :2 > *False* (The student correctly described that a hash table is an array that uses keys for indexing, but they did not mention that it stores key-value pairs, which is an essential aspect of how a hash table works.)\n\n<Point2 :2 > *False* (The student should have explained how the hash function is used to compute an index into the array of buckets or slots for accessing the desired value.)\n\n<Point3 :1 > *False* (The student did not mention the necessity of collision resolution in hash table designs, which is a crucial aspect of how they function efficiently.)"
    }
}