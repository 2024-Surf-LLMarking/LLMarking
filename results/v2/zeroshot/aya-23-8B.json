{
    "0": {
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "fullMark": "5",
        "referenceAnswer": "In the worst case, <Point1:3>the time complexity of QuickSort is O(n^2)<Point1:3>, where n is the number of elements in the array. <Point2:2>This occurs when the pivot elements are consistently the smallest or largest element in the array<Point2:2>, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "teacherMark": "<Point1:0> <Deduction>,<Point2:0> <Deduction>",
        "feedback": "<Point1:3>3</Point1:3> <Induction>...(Correct answer as given in the reference answer, showing a deeper understanding of the topic)\n<Point2:deduction>0</Point2:deduction> (Deduction: The reference answer specifically mentions the worst-case scenario of balanced partitions, which the student's answer does not address.)\nTotal score: <Point1:3>3</Point1:3> / <Point1:5>5</Point1:5>"
    },
    "1": {
        "question": "Explain how a hash table works.",
        "fullMark": "5",
        "referenceAnswer": "<Point1:2>A hash table stores key-value pairs<Point1:2>. <Point2:2>It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found<Point2:2>. <Point3:1>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution<Point3:1>.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "teacherMark": "<Point1:2> <Induction>,<Point2:0> <Deduction>,<Point3:0> <Deduction>",
        "feedback": "<Induction:2>\nThe student's answer demonstrates a good understanding of the basic concepts of a hash table. They correctly identify that a hash table is an array that uses keys for indexing, which is the foundation of how hash tables function. This responds to all the points in the reference answer, and there is a clear and concise explanation, so the mark is earned for <Point:2>.\n\n<Deduction:0>\nWhile the student's response is on the right track, it lacks the nuance of the reference answer. The student does not mention the use of a hash function to compute indices, nor do they address the issue of collisions, which is a key aspect of hash table design. These points are essential to a full understanding of hash tables and their internal workings.\n\nTotal score: <Induction:2>/ <Full Mark:5>"
    }
}