{
    "0": {
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "fullMark": "5",
        "referenceAnswer": "In the worst case, <Point1:3>the time complexity of QuickSort is O(n^2)<Point1:3>, where n is the number of elements in the array. <Point2:2>This occurs when the pivot elements are consistently the smallest or largest element in the array<Point2:2>, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "teacherMark": "<Point1:0> <Deduction>,<Point2:0> <Deduction>",
        "feedback": "<Point:3> <Induction> The student correctly identified that the time complexity of QuickSort in the worst case is O(n^2). This is in accordance with the reference answer, which states that this occurs when the pivot elements consistently lead to unbalanced partitions.\n\n<Point:3> <Deduction> The student did not mention the specific method of partitioning used in QuickSort, which is a minor point in the grading criteria. However, the student's answer is still accurate in terms of the time complexity in the worst case.\n\nTotal score: 3 (Point:3, 3 marks)"
    },
    "1": {
        "question": "Explain how a hash table works.",
        "fullMark": "5",
        "referenceAnswer": "<Point1:2>A hash table stores key-value pairs<Point1:2>. <Point2:2>It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found<Point2:2>. <Point3:1>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution<Point3:1>.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "teacherMark": "<Point1:2> <Induction>,<Point2:0> <Deduction>,<Point3:0> <Deduction>",
        "feedback": "<Point:2> <Induction> The student correctly explains that a hash table stores key-value pairs and uses a hash function to compute an index into an array of buckets or slots. This is the first point of the answer. (Strength: Student accurately describes the key components of a hash table.)\n\n<Point:2> <Deduction> However, the student fails to explain how the hash function assigns keys to unique buckets. This is an important aspect of how hash tables work. (Deduction: The student needs to explain the collision resolution mechanism in more detail.)\n\nTotal score: 2.5 (Induction point: 2.0, Deduction point: 0.5)"
    }
}