{
    "0": {
        "question": "What is the time complexity of the QuickSort algorithm in the worst case?",
        "fullMark": "5",
        "referenceAnswer": "In the worst case, <Point1:3>the time complexity of QuickSort is O(n^2)<Point1:3>, where n is the number of elements in the array. <Point2:2>This occurs when the pivot elements are consistently the smallest or largest element in the array<Point2:2>, leading to unbalanced partitions.",
        "studentAnswer": "QuickSort has a time complexity of O(n log n) in the worst case because it divides the list into two halves.",
        "teacherMark": "<Point1:0> <Deduction>,<Point2:0> <Deduction>",
        "feedback": "<Point1:mark> *True* (reason: The student correctly identified the time complexity of QuickSort in the worst case as O(n^2). They also explained that this occurs when the pivot elements are consistently the smallest or largest element in the array, leading to unbalanced partitions. This answer is consistent with the reference answer.)\n\n<Point2:mark> *False* (reason: The student's answer does not accurately reflect the worst-case time complexity of QuickSort. The reference answer states that the time complexity is O(n^2) in the worst case, not O(n log n).)\n\nTotal score: 3 / 5"
    },
    "1": {
        "question": "Explain how a hash table works.",
        "fullMark": "5",
        "referenceAnswer": "<Point1:2>A hash table stores key-value pairs<Point1:2>. <Point2:2>It uses a hash function to compute an index into an array of buckets or slots, from which the desired value can be found<Point2:2>. <Point3:1>Ideally, the hash function will assign each key to a unique bucket, but most hash table designs employ some form of collision resolution<Point3:1>.",
        "studentAnswer": "A hash table is just an array that stores data and uses keys for indexing.",
        "teacherMark": "<Point1:2> <Induction>,<Point2:0> <Deduction>,<Point3:0> <Deduction>",
        "feedback": "<Point1:mark>*True* (reason: The student's answer correctly identifies that a hash table stores key-value pairs. It also accurately describes the process of using a hash function to compute an index into an array of buckets or slots to find the desired value. The student correctly mentions the importance of a good hash function to ensure that each key is assigned to a unique bucket.)<br><br>Total score: 3/5"
    }
}